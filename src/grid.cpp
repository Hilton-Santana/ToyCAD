#include "grid.h"

//--------------------------------------------------------------------
Grid::Grid()
{
 m_isSnapOn = false;
 m_gridX = 1.0;
 m_gridY = 1.0;
}
//--------------------------------------------------------------------

//--------------------------------------------------------------------
void
Grid::reset()
{
 m_isSnapOn = false;
 m_gridX = 1.0;
 m_gridY = 1.0;
}
//--------------------------------------------------------------------

//-------------------------------------------------------------------------
void 
Grid::setSnapData( bool _isSnapOn, double _dx, double _dy )
{
 m_gridX = _dx;
 m_gridY = _dy;
 m_isSnapOn = _isSnapOn;
}
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
bool 
Grid::getSnapInfo()
{
 return m_isSnapOn;
}
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
void 
Grid::getGridSpace( double* _dx, double* _dy )
{
  *_dx = m_gridX;
  *_dy = m_gridY;
}
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
void 
Grid::snapTo( double* _x, double* _y )
{
 int    ip;   // integer part
 double fp;   // "fraction" part
 double x = *_x;
 double y = *_y;

 fp = x / m_gridX;
 ip = (int) fp;
 fp = fp - ip;
 if (fp > 0.5)
  x = (ip + 1.0) * m_gridX;
 else if (fp < -0.5)
  x = (ip - 1.0) * m_gridX;
 else
  x = ip * m_gridX;

 fp = y / m_gridY;
 ip = (int) fp;
 fp = fp - ip;
 if (fp > 0.5)
  y = (ip + 1.0) * m_gridY;
 else if (fp < -0.5)
  y = (ip - 1.0) * m_gridY;
 else
  y = ip * m_gridY;

 *_x = x;
 *_y = y;
}
//-------------------------------------------------------------------------
